global:
    region: DEFINED_IN_REGION_CHART
    domain: DEFINED_IN_REGION_CHART
    docker_repo: DEFINED_IN_REGION_CHART

debug: false

# TODO Remove that after eu-de-1 got storage nodes
daemonsets: true

# image versions of Kolla images
image_version_swift_account: DEFINED_IN_REGION_CHART
image_version_swift_container: DEFINED_IN_REGION_CHART
image_version_swift_object: DEFINED_IN_REGION_CHART
image_version_swift_proxy: DEFINED_IN_REGION_CHART
image_version_swift_rsyncd: DEFINED_IN_REGION_CHART

# image versions of auxiliary images from other sources
image_version_auxiliary_nginx: '1.10.2-alpine'
image_version_auxiliary_memcached: '1.4.33-alpine'
image_version_auxiliary_memcached_exporter: 'v0.3.0'
image_version_auxiliary_statsd_exporter: '0.3.0'

# shared secrets and credentials
hash_path_prefix: DEFINED_IN_REGION_CHART
hash_path_suffix: DEFINED_IN_REGION_CHART

# If the swift cluster is shared across multiple openstack clusters, one can
# start multiple proxy deployments connecting to the different keystone backends
clusters:
  - name: DEFINED_IN_REGION_CHART
    # Only one cluster should seed its endpoints to keystone
    seed: DEFINED_IN_REGION_CHART
    endpoint_host: DEFINED_IN_REGION_CHART
    proxy_public_ip: DEFINED_IN_REGION_CHART
    proxy_public_port: DEFINED_IN_REGION_CHART
    keystone_auth_uri: DEFINED_IN_REGION_CHART
    keystone_auth_url: DEFINED_IN_REGION_CHART
    swift_service_user: swift
    swift_service_user_domain: Default
    swift_service_project: service
    swift_service_project_domain: Default
    swift_service_password: DEFINED_IN_REGION_CHART
    cname_lookup_storage_domain: DEFINED_IN_REGION_CHART
    cname_lookup_storage_host: DEFINED_IN_REGION_CHART
    sentry_dsn: DEFINED_IN_REGION_CHART
    replicas: 2
    # If there is a need to rate limit the nginx per cluster, that can be reached here
    # The limits apply to every replica within the deployment
    #rate_limit_connections: 1000
    #rate_limit_requests: 1000
    #rate_limit_burst: 1500

    # TLS certificates (TODO: same reasoning as for rings; figure out a better way)
    tls_key: "" # DEFINED_IN_REGION_CHART
    tls_crt: "" # DEFINED_IN_REGION_CHART

# rings (TODO: having the rings in here is insane, but --values is currently
# the only way to supply region-specific data; figure out a better way)
account_ring_base64: DEFINED_IN_REGION_CHART
container_ring_base64: DEFINED_IN_REGION_CHART
object_ring_base64: DEFINED_IN_REGION_CHART

# health check only
dispersion_auth_url: DEFINED_IN_REGION_CHART
cc3test_admin_password: DEFINED_IN_REGION_CHART

# Deploy swift-account-caretaker
swift_account_caretaker:
  enable: true
  common:
    os_auth_url: DEFINED_IN_REGION_CHART
    os_user_domain_name: DEFINED_IN_REGION_CHART
    os_username: DEFINED_IN_REGION_CHART
    os_password: DEFINED_IN_REGION_CHART
    os_project_domain_name: DEFINED_IN_REGION_CHART
    os_project_name: DEFINED_IN_REGION_CHART
  verify:
    - cluster_name: DEFINED_IN_REGION_CHART
      os_auth_url: DEFINED_IN_REGION_CHART
      os_user_domain_name: DEFINED_IN_REGION_CHART
      os_username: DEFINED_IN_REGION_CHART
      os_password: DEFINED_IN_REGION_CHART
      os_project_domain_name: DEFINED_IN_REGION_CHART
      os_project_name: DEFINED_IN_REGION_CHART
