ALERT OpenstackSwiftFirstByteTiming
  IF max(swift_proxy_firstbyte_timer{status="200",quantile="0.5"}) by (region, os_cluster, type, instance) > 1000.0
  FOR 15m
  LABELS {
    tier = "openstack",
    service = "swift",
    severity = "info",
    context = "firtsbytetiming",
    dashboard = "swift-proxy?var-cluster={{ $labels.os_cluster }}&var-proxy={{ $labels.instance }}",
  }
  ANNOTATIONS {
    summary = "first byte timing for {{ $labels.type }} in {{ $labels.os_cluster }} increased",
    description = "This alert indicates the latency in token validation.",
  }

ALERT OpenstackSwiftServiceUnavailable
  IF sum(irate(swift_proxy_timer_sum{policy="all",status="503"}[5m])) by (os_cluster) > 100
  FOR 5m
  LABELS {
    tier = "openstack",
    service = "swift",
    severity = "critical",
    context = "serviceunavailable",
    dashboard = "swift-proxy?var-cluster={{ $labels.os_cluster }}",
  }
  ANNOTATIONS {
    summary = "swift-service-unavailable",
    description = "Swift is responding with 503. Usually the root cause is a broken token validation",
  }

ALERT OpenstackSwiftHealthCheck
  IF avg(swift_health_statsd_exit_code_gauge{}) by (region) > 0.2
  FOR 5m
  LABELS {
    tier = "openstack",
    service = "swift",
    severity = "warning",
    context = "health",
    dashboard = "swift-overview",
  }
  ANNOTATIONS {
    summary = "swift-health-check",
    description = "Swift health check failures. Run kubectl log swift-proxy-... collector to get details",
  }

ALERT OpenstackSwiftMismatchedRings
  IF swift_cluster_md5_ring_not_matched_gauge > 0
  FOR 15m
  LABELS {
    tier = "openstack",
    service = "swift",
    severity = "warning",
    context = "mismatchedrings",
    dashboard = "swift-overview",
  }
  ANNOTATIONS {
    summary = "swift-mismatched-rings",
    description = "Alarm on mismatched rings",
  }

ALERT OpenstackSwiftDisksUnmounted
  IF sum(swift_cluster_drives_unmounted_gauge{}) by (region, storage_ip) > 0.0
  FOR 3m
  LABELS {
    tier = "openstack",
    service = "swift",
    severity = "warning",
    context = "drivesunmounted",
    dashboard = "swift-overview",
  }
  ANNOTATIONS {
    summary = "swift disks unmounted on the server IP {{ $labels.storage_ip }}",
    description = "Swift drives not mounted. Run swift-recon --unmounted to get details",
  }

ALERT OpenstackSwiftDiskFailures
  IF sum(swift_cluster_drives_audit_errors_gauge) by (region, storage_ip) > 0.0
  FOR 3m
  LABELS {
    tier = "openstack",
    service = "swift",
    severity = "warning",
    context = "drivefailures",
    dashboard = "swift-overview",
  }
  ANNOTATIONS {
    summary = "swift disk failures on the server IP {{ $labels.storage_ip }}",
    description = "Swift drive failures. Run swift-recon --driveaudit to get details",
  }

ALERT OpenstackSwiftAsyncPendings
  IF sum(increase(swift_object_server_async_pendings_counter[5m])) by (region) > 2000
  FOR 3m
  LABELS {
    tier = "openstack",
    service = "swift",
    severity = "warning",
    context = "asyncpendings",
    dashboard = "swift-overview",
  }
  ANNOTATIONS {
    summary = "swift object server async pendings reached 2000",
    description = "Async Pendings indicate an overload scenario or faulty device(s)",
  }

ALERT OpenstackSwiftRateLimit1000
  IF sum(increase(swift_proxy_timer_count{status='498'}[5m])) by (region, os_cluster) > 1000
  FOR 3m
  LABELS {
    tier = "openstack",
    service = "swift",
    severity = "info",
    context = "ratelimit",
    dashboard = "swift-overview",
  }
  ANNOTATIONS {
    summary = "swift rate limit hit in {{ $labels.os_cluster }}",
    description = "Check kibana for the causing account and container",
  }

ALERT OpenstackSwiftRateLimit5000
  IF sum(increase(swift_proxy_timer_count{status='498'}[5m])) by (region, os_cluster) > 5000
  FOR 3m
  LABELS {
    tier = "openstack",
    service = "swift",
    severity = "warning",
    context = "ratelimit",
    dashboard = "swift-overview",
  }
  ANNOTATIONS {
    summary = "swift rate limit hit in {{ $labels.os_cluster }}",
    description = "Check kibana for the causing account and container",
  }

ALERT OpenstackSwiftUsedSpace
  IF max(predict_linear(swift_cluster_storage_used_percent_gauge_average[1w], 60*60*24*30)) by (region) > 0.8
  FOR 1d
  LABELS {
    tier = "openstack",
    service = "swift",
    severity = "info",
    context = "usedcapacity",
    dashboard = "swift-capacity-global?var-region={{ $labels.region }}",
  }
  ANNOTATIONS {
    summary = "Swift storage expected to be full soon",
    description = "Swift storage usage will reach 80% in 30 days. Order hardware now!",
  }

ALERT OpenstackSwiftRepo
  IF repo_sync_last_run_gauge{kind="success"} < 1
  FOR 2d
  LABELS {
    tier = "openstack",
    service = "swift",
    severity = "warning",
    context = "repo",
    meta = "{{ $labels.repo }}",
    dashboard = "repo-sync?var-repo={{ $labels.repo }}",
  }
  ANNOTATIONS {
    summary = "Repo {{ $labels.repo }} sync failed",
    description = "Content repo {{ $labels.repo }} sync failed. Check the logs.",
  }

ALERT OpenstackSwiftRepoEntitlementForbidden
  IF repo_sync_check_success_gauge == -1
  FOR 1h
  LABELS {
    tier = "openstack",
    service = "swift",
    severity = "warning",
    context = "repo-{{ $labels.repo }}-entitlement",
    meta = "{{ $labels.repo }}",
    dashboard = "repo-sync?var-repo={{ $labels.repo }}",
    #playbook = TODO
  }
  ANNOTATIONS {
    summary = "Repo {{ $labels.repo }} entitlement lost",
    description = "Repo {{ $labels.repo }} the entitlement became invalid.",
  }

ALERT OpenstackSwiftRepoEntitlement
  IF repo_sync_check_success_gauge == 0
  FOR 1h
  LABELS {
    tier = "openstack",
    service = "swift",
    severity = "info",
    context = "repo-{{ $labels.repo }}-entitlement",
    meta = "{{ $labels.repo }}",
    dashboard = "repo-sync?var-repo={{ $labels.repo }}",
    #playbook = TODO
  }
  ANNOTATIONS {
    summary = "Repo {{ $labels.repo }} entitlement check failed",
    description = "Repo {{ $labels.repo }} entitlement check failed. Check the logs.",
  }

ALERT OpenstackSwiftDriveAutopilotConsistencyCheck
  IF rate(swift_drive_autopilot_events{type="consistency-check"}[5m]) < 0.02
  FOR 10m
  LABELS {
    tier = "openstack",
    service = "swift",
    severity = "warning",
    context = "autopilot",
    dashboard = "swift-overview",
  }
  ANNOTATIONS {
    summary = "No consistency checks performed",
    description = "Autopilot {{ $labels.kubernetes_pod_name }} does not perform its consistency checks on schedule. Please check if it's having a bad time.",
  }
