aggregated:container_cpu_system_seconds_total{} = sum(container_cpu_system_seconds_total) by (id) keep_common
aggregated:container_cpu_usage_seconds_total{} = sum(container_cpu_usage_seconds_total) by (id) keep_common
aggregated:container_cpu_user_seconds_total{} = sum(container_cpu_user_seconds_total) by (id) keep_common
aggregated:swift_cluster_storage_used_percent_gauge_average{} = avg(swift_cluster_storage_used_percent_gauge) by (kubernetes_namespace, system, component)
aggregated:prometheus_local_storage_ingested_samples_total_rate{} = rate(prometheus_local_storage_ingested_samples_total[5m])
aggregated:pg_database_size_bytes_gauge_average{} = avg(pg_database_size_bytes) by (region,kubernetes_name,datname)

# the kubernetes_namespace label is necessary to enable the forwarding to Monasca (the agent only considers time series with the right kubernetes_namespace)
aggregated:limes_failed_scrapes_rate{} = sum(increase(limes_failed_scrapes[5m])) by (cluster,region,service,kubernetes_namespace) + sum(0 * limes_successful_scrapes) by (cluster,region,service,kubernetes_namespace)
aggregated:swift_async_pendings_rate{} = sum(increase(swift_object_server_async_pendings_counter[5m])) by (kubernetes_namespace)
aggregated:elasticsearch_data_diskspace_used_percentage{} = (100 - 100 * elasticsearch_filesystem_data_free_bytes / elasticsearch_filesystem_data_size_bytes)
